<?php

/**
 * Remove Drupal standard css files
 */
function digi_css_alter(&$css) {
    //make a list of module css to remove
    $css_to_remove = array();
    $css_to_remove[] = drupal_get_path('module','system').'/system.base.css';
    $css_to_remove[] = drupal_get_path('module','system').'/system.menus.css';
    $css_to_remove[] = drupal_get_path('module','system').'/system.theme.css';

    // now we can remove the contribs from the array
    foreach ($css_to_remove as $index => $css_file) {
      unset($css[$css_file]);
    }
}

/**
 * Override or insert variables into the block template.
 */
function digi_preprocess_block(&$variables) {

}

/**
 * Add body classes if certain regions have content.
 */
function digi_preprocess_html(&$variables)  {
  
}

/**
 * Override or insert variables into the node template.
 */
function digi_preprocess_node(&$variables) {
  
}

/**
 * Override or insert variables into the page template for HTML output.
 */
function digi_process_html(&$variables) {

}

/**
 * Override or insert variables into the page template.
 */
function digi_process_page(&$variables) {

}


// For the node types that are data buckets, lets  go home
// as they are not front facing and we dont want that indexed
function digi_preprocess_page(&$vars) {
  $data_nodes = array('oem','device', 'slide');
  if(isset($vars['node'])){ 
    if(in_array($vars['node']->type,$data_nodes)) {
      if(!$is_admin){
        drupal_goto('');
      }  
    }
  }
  // redirect pages generated by nodequeue to home
  if(arg(0) == 'nodequeue') {
    drupal_goto('');
  }
}

/**
 * Modify forms
 */
function digi_form_alter(&$form, &$form_state, $form_id) {

}

/**
 * implementation of hook_menu_link()
 **/

function digi_menu_link($variables){
  $element = $variables['element'];
  
  if($element['#theme'] == 'menu_link__menu_homepage_menu') {
    
    // removing existing extra classes
    unset($element['#attributes']['class']);
    static $item_id = 0;
    $element['#attributes']['class'][] = 'item';
    $element['#attributes']['class'][] = 'zone-' . (++$item_id);
    $element['#localized_options']['external'] = FALSE;
    
    // only process anchor tag
    if($element['#href'] == '<front>' && isset($element['#localized_options']['fragment'])){
      $output = '<a href="#'.$element['#localized_options']['fragment'].'" title="'.$element['#title'].'">'.$element['#title'].'</a>';
    }
    else {
       $output = l($element['#title'], $element['#href'], $element['#localized_options']);
    }
  }
  else {
    $sub_menu = $element['#below'] ? drupal_render($element['#below']) : '';
    $output = l($element['#title'], $element['#href'], $element['#localized_options']);
  }
  return '<li' . drupal_attributes($element['#attributes']) . '>' . $output . $sub_menu . '</li>';
}
